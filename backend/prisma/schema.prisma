generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int       @id @default(autoincrement())
  username     String    @unique
  password     String
  name         String?
  surname      String?
  bookings     Booking[] @relation("UserAsBookingRenter")
  sentRequests Request[] @relation("UserAsRenter")
  tools        Tool[]
}

model Tool {
  id          Int       @id @default(autoincrement())
  name        String
  description String
  price       Int?       
  location    String?
  category    String?
  photoURL    String?
  userId      Int        
  user        User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  requests    Request[]  @relation("ToolToRequest")
  bookings    Booking[]  @relation("ToolAsBookingTool")
}

model Request {
  id        Int      @id @default(autoincrement())
  renterId  Int
  toolId    Int
  startDate DateTime
  endDate   DateTime
  pending   Boolean  @default(true)
  accepted  Boolean  @default(false)
  price     Int?
  viewed    Boolean  @default(false)
  booking   Booking?
  renter    User     @relation("UserAsRenter", fields: [renterId], references: [id], onDelete: Cascade)
  tool      Tool     @relation("ToolToRequest", fields: [toolId], references: [id], onDelete: Cascade)
}

model Booking {
  id        Int      @id @default(autoincrement())
  requestId Int      @unique
  renterId  Int
  toolId    Int
  startDate DateTime
  endDate   DateTime
  price     Int
  createdAt DateTime @default(now())
  renter    User     @relation("UserAsBookingRenter", fields: [renterId], references: [id], onDelete: Cascade)
  request   Request  @relation(fields: [requestId], references: [id], onDelete: Cascade)
  tool      Tool     @relation("ToolAsBookingTool", fields: [toolId], references: [id], onDelete: Cascade)
}
